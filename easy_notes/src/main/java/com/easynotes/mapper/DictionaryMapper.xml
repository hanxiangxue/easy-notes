<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easynotes.dao.DictionaryDao">
	<resultMap id="BaseResultMap" type="com.easynotes.core.model.Dictionary">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="type" jdbcType="INTEGER" property="type" />
		<result column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="last_update_time" jdbcType="TIMESTAMP"
			property="lastUpdateTime" />
		<result column="state" jdbcType="INTEGER" property="state" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, type, user_id, create_time, last_update_time,
		state
	</sql>
	<select id="queryByID" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_dictionary
		where id = #{id,jdbcType=INTEGER}
		and state=1
	</select>
	<select id="queryByNameAndUserId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_dictionary
		where user_id = #{userId,jdbcType=INTEGER}
		and
		name=#{name,jdbcType=VARCHAR}
	</select>
	<update id="deleteByID" parameterType="java.lang.Integer">
		update t_dictionary set
		state=0
		where id=#{id} and state=1
	</update>
	<update id="deleteBatch">
		update t_dictionary set
		state=0
		where id in
		<foreach collection="array" open="(" close=")" separator=","
			item="item">
			#{item}
		</foreach>
		and state=1
	</update>

	<insert id="insert" parameterType="com.easynotes.core.model.Dictionary">
		insert into t_dictionary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="lastUpdateTime != null">
				last_update_time,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdateTime != null">
				#{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="com.easynotes.core.model.Dictionary">
		update t_dictionary
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastUpdateTime != null">
				last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER} and state=1
	</update>
	<select id="queryForPages" parameterType="dictionaryQuery"
		resultMap="BaseResultMap">
		<include refid="Base_Column_List" />
		from t_dictionary
		where state=1
		and user_id =#{userId}
		order by name;
	</select>
</mapper>
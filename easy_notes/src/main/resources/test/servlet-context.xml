<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation=" 
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

	<!-- 扫描com.shsxt.controller 下包 -->
	<context:component-scan base-package="com.easynotes.controller" />
	<!-- mvc 请求映射 处理器与适配器配置 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
	</mvc:annotation-driven>


	<!-- 静态资源文件的处理 方式一 -->
	<mvc:default-servlet-handler />




	<!-- 视图配置 -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="suffix" value=".ftl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>



	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>




	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/><!-- 拦截所有资源 -->
			<mvc:exclude-mapping path="/index"/>
			<mvc:exclude-mapping path="/user/userLogin"/>
			<mvc:exclude-mapping path="/css/**"/>
			<mvc:exclude-mapping path="/js/**"/>
			<mvc:exclude-mapping path="/images/**"/>
			<mvc:exclude-mapping path="/jquery-easyui-1.3.3/**"/>
		  <bean class="com.easynotes.interceptors.UserLoginInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>
	
	
	<!-- 异常配置 -->
<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
    定义默认的异常处理页面，当该异常类型的注册时使用
    <property name="defaultErrorView" value="error"></property>    
    定义异常处理页面用来获取异常信息的变量名，默认名为exception
    <property name="exceptionAttribute" value="ex"></property>     
    定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值  
    <property name="exceptionMappings">  
        <props>  
            <prop key="com.shsxt.base.exception.ParamException">error</prop>  
            这里还可以继续扩展对不同异常类型的处理  
        </props>  
    </property>
</bean> -->

<bean id="exceptionResolver" class="com.easynotes.core.base.exception.GlobalException">
    <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->
    <!-- <property name="defaultErrorView" value="error"></property>     -->
    <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception-->
   <!--  <property name="exceptionAttribute" value="ex"></property>      -->
    <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->  
    <!-- <property name="exceptionMappings">  
        <props>  
             <prop key="com.shsxt.base.exception.ParamException">error</prop> 
            这里还可以继续扩展对不同异常类型的处理  
        </props>  
    </property> -->
</bean>










</beans>
